#ifndef EIGHT_DATA_
#define EIGHT_DATA_
#include <stdint.h>
#define _8_HEIGHT 16
#define _8_WIDTH 16

// array size is 768
static const uint32_t eightData[]  = {
  0xffffff, 0xffffff, 0xffffff, 0xfcfcfc, 0xffffff, 0xffffff, 0xfdfdfd, 0xffffff, 0xffffff, 0xfcfcfc, 0xffffff, 0xfefefe, 0xfefefe, 0xffffff, 0xfdfdfd, 0xffffff, 
  0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfcfcfc, 0xfbfbfb, 0xffffff, 0x000000, 0x010101, 0x000000, 0xffffff, 0xfdfdfd, 0xffffff, 0xfefefe, 0xffffff, 0xfcfcfc, 
  0xfefefe, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0x000000, 0x000000, 0xffffff, 0x000000, 0x010101, 0xfdfdfd, 0xfefefe, 0xfcfcfc, 0xffffff, 0xffffff, 
  0xffffff, 0xfefefe, 0xfefefe, 0xffffff, 0xffffff, 0xfdfdfd, 0x010101, 0xffffff, 0xfbfbfb, 0xffffff, 0x020202, 0x020202, 0xfdfdfd, 0xffffff, 0xfefefe, 0xffffff, 
  0xffffff, 0xfefefe, 0xfefefe, 0xffffff, 0xffffff, 0xfdfdfd, 0x010101, 0xffffff, 0xfefefe, 0xffffff, 0xfdfdfd, 0x000000, 0xffffff, 0xfafafa, 0xffffff, 0xfdfdfd, 
  0xfefefe, 0xfefefe, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0x000000, 0x000000, 0xfdfdfd, 0xfdfdfd, 0xffffff, 0x010101, 0xfcfcfc, 0xffffff, 0xffffff, 0xffffff, 
  0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xfcfcfc, 0xfbfbfb, 0xffffff, 0x000000, 0x000000, 0x050505, 0x010101, 0x000000, 0xffffff, 0xfdfdfd, 0xfefefe, 0xfcfcfc, 
  0xffffff, 0xffffff, 0xffffff, 0xfcfcfc, 0xffffff, 0xffffff, 0xfdfdfd, 0xffffff, 0xfefefe, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 
  0xfcfcfc, 0xffffff, 0xffffff, 0xfbfbfb, 0xffffff, 0xfdfdfd, 0xfefefe, 0xfefefe, 0x000000, 0x000000, 0x010101, 0xffffff, 0xfdfdfd, 0xffffff, 0xffffff, 0xffffff, 
  0xffffff, 0xfcfcfc, 0xfbfbfb, 0xffffff, 0xffffff, 0xfcfcfc, 0x000000, 0x020202, 0x040404, 0xfcfcfc, 0x000000, 0xffffff, 0xffffff, 0xfdfdfd, 0xffffff, 0xfdfdfd, 
  0xfcfcfc, 0xffffff, 0xfcfcfc, 0xffffff, 0xffffff, 0x000000, 0x080808, 0xfbfbfb, 0xfbfbfb, 0xffffff, 0x010101, 0xfbfbfb, 0xfdfdfd, 0xffffff, 0xfdfdfd, 0xffffff, 
  0xffffff, 0xffffff, 0xffffff, 0xfcfcfc, 0xfefefe, 0x010101, 0x000000, 0x040404, 0x010101, 0x000000, 0x010101, 0xfdfdfd, 0xffffff, 0xfefefe, 0xffffff, 0xfdfdfd, 
  0xfefefe, 0xfcfcfc, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfdfdfd, 0xfefefe, 0xfdfdfd, 0xffffff, 0xfdfdfd, 0xffffff, 0xfefefe, 0xf9f9f9, 0xffffff, 0xfefefe, 
  0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfafafa, 0xffffff, 0xfefefe, 0xfefefe, 0xffffff, 0xf9f9f9, 0xffffff, 0xfdfdfd, 0xfefefe, 0xffffff, 0xfdfdfd, 0xfefefe, 
  0xfdfdfd, 0xfdfdfd, 0xfcfcfc, 0xfdfdfd, 0xffffff, 0xffffff, 0xffffff, 0xfefefe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfdfdfd, 0xffffff, 0xfafafa, 0xffffff, 
  0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xfdfdfd, 0xffffff, 0xfdfdfd, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff
};

#endif